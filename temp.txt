import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.DocumentBuilder;
import org.w3c.dom.Document;
import javax.xml.xpath.XPath;
import javax.xml.xpath.XPathFactory;
import org.w3c.dom.NodeList;
import java.io.File;

public class XmlParser {
private static class SimpleNamespaceContext implements NamespaceContext {
        public String getNamespaceURI(String prefix) {
            if (prefix == null) throw new IllegalArgumentException("No prefix provided!");
            else if ("prime".equals(prefix)) return "http://primetherapeutics.com/ncpdp-ext/transport";
            else if ("script".equals(prefix)) return "http://www.ncpdp.org/schema/script";
            else return XMLConstants.NULL_NS_URI;
        }
        public String getPrefix(String uri) { return null; }
        public Iterator getPrefixes(String uri) { return null; }
    }

    public void parseXml(String xmlFilePath) {
        try {
            File xmlFile = new File(xmlFilePath);
            DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
            DocumentBuilder builder = factory.newDocumentBuilder();
            Document document = builder.parse(xmlFile);
            document.getDocumentElement().normalize();

            XPathFactory xpathFactory = XPathFactory.newInstance();
            XPath xpath = xpathFactory.newXPath();

            // Use XPath to handle namespaces properly if they are present
            NodeList paResponseNodes = (NodeList) xpath.evaluate("//PAResponse", document, javax.xml.xpath.XPathConstants.NODESET);

            System.out.println("Number of PAResponse nodes found: " + paResponseNodes.getLength());

            for (int i = 0; i < paResponseNodes.getLength(); i++) {
                // Extract and process data for each PAResponse node
                // ...
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public static void main(String[] args) {
        XmlParser parser = new XmlParser();
        parser.parseXml("/path/to/your/xmlfile.xml"); // Replace with the actual file path
    }
}
