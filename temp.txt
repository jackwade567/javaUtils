import javax.xml.stream.XMLInputFactory;
import javax.xml.stream.XMLEventReader;
import javax.xml.stream.events.XMLEvent;
import javax.xml.stream.events.StartElement;
import javax.xml.stream.events.Characters;
import javax.xml.stream.events.EndElement;
import javax.xml.stream.XMLStreamException;
import java.io.FileInputStream;
import java.util.Stack;

public class XmlProcessor {

    public void printTagValuesWithHierarchy(String xmlFilePath) {
        XMLInputFactory xmlInputFactory = XMLInputFactory.newInstance();

        try {
            XMLEventReader reader = xmlInputFactory.createXMLEventReader(new FileInputStream(xmlFilePath));
            Stack<String> tagPath = new Stack<>();
            String elementValue = null;
            boolean insidePAResponse = false;

            while (reader.hasNext()) {
                XMLEvent event = reader.nextEvent();

                if (event.isStartElement()) {
                    StartElement startElement = event.asStartElement();
                    String tagName = startElement.getName().getLocalPart();
                    if ("PAResponse".equals(tagName)) {
                        insidePAResponse = true;
                    } else if (insidePAResponse) {
                        tagPath.push(tagName);
                    }
                    elementValue = null; // Reset the element value on a start element
                } else if (event.isCharacters()) {
                    Characters characters = event.asCharacters();
                    if (!characters.isWhiteSpace()) {
                        elementValue = characters.getData();
                    }
                } else if (event.isEndElement()) {
                    EndElement endElement = event.asEndElement();
                    String tagName = endElement.getName().getLocalPart();
                    if ("PAResponse".equals(tagName)) {
                        insidePAResponse = false;
                        tagPath.clear();
                    } else if (insidePAResponse && !tagPath.isEmpty() && tagName.equals(tagPath.peek())) {
                        if (elementValue != null) {
                            // Only print the tag and value if there was a value for this tag
                            String fullPath = String.join("_", tagPath);
                            System.out.println(fullPath + ": " + elementValue);
                        }
                        tagPath.pop();
                    }
                }
            }
        } catch (XMLStreamException e) {
            e.printStackTrace();
        }
    }

    public static void main(String[] args) {
        XmlProcessor processor = new XmlProcessor();
        processor.printTagValuesWithHierarchy("path_to_your_xml_file.xml"); // Replace with your actual file path
    }
}
