import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.DocumentBuilder;
import org.w3c.dom.Document;
import javax.xml.xpath.XPath;
import javax.xml.xpath.XPathFactory;
import javax.xml.xpath.XPathExpression;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import org.w3c.dom.NodeList;

public class XmlParser {

    public List<PAResponseEntity> parseXmlToEntities(String xmlFilePath) {
        List<PAResponseEntity> entities = new ArrayList<>();

        try {
            File xmlFile = new File(xmlFilePath);
            DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
            DocumentBuilder builder = factory.newDocumentBuilder();
            Document document = builder.parse(xmlFile);
            document.getDocumentElement().normalize();

            XPathFactory xpathFactory = XPathFactory.newInstance();
            XPath xpath = xpathFactory.newXPath();

            // Example XPath expressions - adjust as needed
            XPathExpression exprPAResponse = xpath.compile("//PAResponse");
            NodeList paResponseNodes = (NodeList) exprPAResponse.evaluate(document, javax.xml.xpath.XPathConstants.NODESET);

            for (int i = 0; i < paResponseNodes.getLength(); i++) {
                PAResponseEntity entity = new PAResponseEntity();

                // Example for one field - replace 'path/to/element' with the actual XPath
                XPathExpression exprField1 = xpath.compile("path/to/element");
                String field1Value = (String) exprField1.evaluate(paResponseNodes.item(i), javax.xml.xpath.XPathConstants.STRING);
                entity.setEntityField1(field1Value);

                // Repeat for other fields...

                entities.add(entity);
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

        return entities;
    }
}
